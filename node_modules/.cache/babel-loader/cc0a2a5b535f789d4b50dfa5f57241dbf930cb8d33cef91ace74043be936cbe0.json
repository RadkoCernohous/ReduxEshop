{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(function (item) {\n        return item.id === newItem.id;\n      });\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(function (item) {\n        return item.id === id;\n      });\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(function (item) {\n          return item.id !== id;\n        });\n        console.log(state.items);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","console","log","cartActions","actions"],"sources":["C:/Users/radko/Downloads/React Course/Section 20/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed:false\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload\r\n            const existingItem = state.items.find(function (item) { return item.id === newItem.id })\r\n            state.totalQuantity++\r\n            state.changed=true\r\n            if (!existingItem) {\r\n                state.items.push({ id: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name: newItem.title })\r\n            }\r\n            else {\r\n                existingItem.quantity++\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload\r\n            const existingItem = state.items.find(function (item) { return item.id === id })\r\n            state.totalQuantity--\r\n            state.changed=true\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(function (item) { return item.id !== id })\r\n                console.log(state.items);\r\n            }\r\n            else {\r\n                existingItem.quantity--\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions\r\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,OAAO,EAAC;EACZ,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACC,OAAO,CAACN,aAAa;MAClDI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACtC,CAAC;IACDQ,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAC,UAAUC,IAAI,EAAE;QAAE,OAAOA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE;MAAC,CAAC,CAAC;MACxFR,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAC,IAAI;MAClB,IAAI,CAACQ,YAAY,EAAE;QACfL,KAAK,CAACL,KAAK,CAACc,IAAI,CAAC;UAAED,EAAE,EAAEJ,OAAO,CAACI,EAAE;UAAEE,KAAK,EAAEN,OAAO,CAACM,KAAK;UAAEC,QAAQ,EAAE,CAAC;UAAEC,UAAU,EAAER,OAAO,CAACM,KAAK;UAAEjB,IAAI,EAAEW,OAAO,CAACS;QAAM,CAAC,CAAC;MAC3H,CAAC,MACI;QACDR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACrE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAC,UAAUC,IAAI,EAAE;QAAE,OAAOA,IAAI,CAACC,EAAE,KAAKA,EAAE;MAAC,CAAC,CAAC;MAChFR,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAC,IAAI;MAClB,IAAIQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC7BX,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAAC,UAAUR,IAAI,EAAE;UAAE,OAAOA,IAAI,CAACC,EAAE,KAAKA,EAAE;QAAC,CAAC,CAAC;QAC3EQ,OAAO,CAACC,GAAG,CAACjB,KAAK,CAACL,KAAK,CAAC;MAC5B,CAAC,MACI;QACDU,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;AAIF,OAAO,MAAMQ,WAAW,GAAG1B,SAAS,CAAC2B,OAAO;AAC5C,eAAe3B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}